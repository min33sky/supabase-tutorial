import React, { useCallback, useEffect, useState } from 'react';
import SmoothieCard from '../components/SmoothieCard';
import supabase from '../config/supabaseConfig';

export type OrderType = 'created_at' | 'title' | 'rating';

export default function Home() {
  const [fetchError, setFetchError] = useState<string | null>('');
  const [smoothies, setSmoothies] = useState<Smoothie[]>([]);
  const [orderBy, setOrderBy] = useState<OrderType>('created_at');

  const onDelete = useCallback((id: number) => {
    setSmoothies((prev) => prev.filter((smoothie) => smoothie.id !== id));
  }, []);

  useEffect(() => {
    const fetchSmoothies = async () => {
      const { data, error } = await supabase
        .from<Smoothie>('smoothies')
        .select()
        .order(orderBy, { ascending: false });

      if (error) {
        setFetchError('Could not fetch the smoothies');
        setSmoothies([]);
      }
      if (data) {
        setSmoothies(data);
        setFetchError(null);
      }
    };

    fetchSmoothies();
  }, [orderBy]);

  return (
    <div className="page home">
      {fetchError && <p>{fetchError}</p>}
      <div className="smoothies">
        <div className="order-by">
          <p>Order by:</p>
          <button onClick={() => setOrderBy('created_at')}>Time Created</button>
          <button onClick={() => setOrderBy('title')}>Title</button>
          <button onClick={() => setOrderBy('rating')}>Rating</button>
        </div>
        <div className="smoothie-grid">
          {smoothies?.map((smoothie) => (
            <SmoothieCard
              smoothie={smoothie}
              onDelete={onDelete}
              key={smoothie.id}
            />
          ))}
        </div>
      </div>
    </div>
  );
}

// Generated by https://quicktype.io

export interface Smoothie {
  id: number;
  created_at: Date;
  title: string;
  method: string;
  rating: number;
}
